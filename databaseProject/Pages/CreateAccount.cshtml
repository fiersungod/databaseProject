@page
@model databaseProject.Pages.CreateAccountModel
@{
    ViewData["Title"] = "Create Account";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Account</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 0; background-color: #f4f4f4; }
        .container { max-width: 400px; margin: 100px auto; padding: 20px; background: white; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); }
        h1 { text-align: center; color: #333; }
        form { display: flex; flex-direction: column; }
        label { margin-bottom: 5px; font-weight: bold; color: #555; }
        input[type="text"], input[type="password"], input[type="email"] { margin-bottom: 15px; padding: 10px; border: 1px solid #ccc; border-radius: 4px; }
        button { padding: 10px; background-color: #ff6347; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; }
        button:hover { background-color: #e5533c; }
        .register-link { text-align: right; margin-top: 10px; }
        .register-link a { color: #ff6347; text-decoration: none; font-size: 14px; }
        .register-link a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Create Account</h1>
        <form id="Create">
            <label for="name">Full Name:</label>
            <input type="text" id="name" name="Name" placeholder="Enter your full name" required />

            <label for="email">Email:</label>
            <input type="email" id="email" name="Email" placeholder="Enter your email" required />

            <label for="phone">PhoneNumber:</label>
            <input type="text" id="phone" name="phone" placeholder="Enter your phoneNumber" required />

            <label for="password">Password:</label>
            <input type="password" id="password" name="Password" placeholder="Enter your password" required />

            <label for="confirmPassword">Confirm Password:</label>
            <input type="password" id="confirmPassword" name="ConfirmPassword" placeholder="Confirm your password" required />

            @* @if (Model.ErrorMessage != null) *@
            @* { *@
            @*     <div style="color: red; font-size: 14px;">@Model.ErrorMessage</div> *@
            @* } *@

            <button type="submit">Create Account</button>
        </form>
        <div class="register-link">
            <a href="/Login">Already have an account? Login</a>
        </div>
    </div>
    <script>
        document.getElementById('Create').addEventListener('submit', async () => {
            event.preventDefault();

            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const phone = document.getElementById('phone').value;
            const password = document.getElementById('password').value;
            const Cpassword = document.getElementById('confirmPassword').value;

            const data = {
                Name: name,
                Email: email,
                Phone: phone,
                Password: password,
                CPassword: Cpassword
            };
            const response = await fetch("/CreateAccount?handler=Create", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })

            const result = await response.json();
            if (response.ok) {
                alert("Account created successfully! Please log in.");
            } else {
                location.reload();
            }
        });
    </script>
</body>
</html>
